//////////////////////////////////////////////
//  Hax World			            //
//  --------------------------------------  //
//  This is the menu source for Hax World,  //
//  What it does:			    //
//  Displays menu			    //
//					    //
//  Coded by Ben Weidenhofer, under the     //
//  GPL license,  bla bla bla open source!  //
//////////////////////////////////////////////

#include "SDL/SDL.h"
#include "SDL/SDL_image.h"
#include "SDL/SDL_mixer.h"
#include "SDL/SDL_ttf.h"
#include <string> 
// The attributes of the screen 
const int SCREEN_WIDTH = 640; 
const int SCREEN_HEIGHT = 480; 
const int SCREEN_BPP = 32;
int ERROR_NUM = 0;

// Audio attributes
int channel;
int audio_rate = 22050;
Uint16 audio_format = AUDIO_S16SYS;
int audio_channels = 2;
int audio_buffers = 4096;

SDL_Surface* menubg = NULL;  // menu
SDL_Surface* screen = NULL;  // screen

SDL_Event event;

/***************************************************************\
*			SDL_Mixer stuff                         *
\***************************************************************/
//The music that will be played 
Mix_Music *music = NULL; 

//The sound effects that will be used 
Mix_Chunk *menu_music = NULL;
/***************************************************************\
\***************************************************************/

/***************************************************************\
*	   Program functions here to save masses of code       *
\***************************************************************/

void clean_up() {
	// Free Surfaces
	SDL_FreeSurface(menubg);
	SDL_FreeSurface(screen);

	//Free the sound effects 
	Mix_FreeChunk(menu_music);
	Mix_FreeMusic(music); 

	//Quit SDL_mixer 
	Mix_CloseAudio(); 

	printf("\nCleaning up...");
	printf("\nCleaned up successfully\n");
	SDL_Quit();		// quit
	printf("\nErrors: %i \n",ERROR_NUM);
}

void error() {
	ERROR_NUM = ERROR_NUM + 1;
	printf("Error details: %s\n", SDL_GetError());
	clean_up();
}

/***************************************************************\
\***************************************************************/

/***************************************************************\
*		Declerations for start of haxworld	       *
\***************************************************************/

void start_SDL() {
	if (SDL_Init(SDL_INIT_VIDEO | SDL_INIT_AUDIO) != 0) {
		fprintf(stderr, "Unable to initialize SDL: %s\n", SDL_GetError());
	}

}

void apply_surface(int x, int y, SDL_Surface* source, SDL_Surface* destination) { 

	SDL_Rect offset; 

	offset.x = x; 
	offset.y = y;
	
	SDL_BlitSurface(source, NULL, destination, &offset); 
} 

void setup_screen() {
	screen = SDL_SetVideoMode(SCREEN_WIDTH, SCREEN_HEIGHT, SCREEN_BPP, SDL_SWSURFACE); 
	if(screen == NULL)  { 
		error();
	} 
}

void apply_loadscreen() {
	apply_surface(0, 0, intro, screen); 
	apply_surface(111, 230, loading, screen);
}

/***************************************************************\
\***************************************************************/
SDL_Surface *load_image(std::string filename) { 

	SDL_Surface* loadedImage = NULL; 
	SDL_Surface* optimizedImage = NULL; 

	loadedImage = SDL_LoadBMP(filename.c_str()); 

	// If nothing went wrong in loading the image 
	if(loadedImage != NULL) { 
		optimizedImage = SDL_DisplayFormat(loadedImage); 
		SDL_FreeSurface(loadedImage); 
	} 
	else {
		error();	
	}

	return optimizedImage; 
} 

int main(int argc, char* args[]) { 
	start_SDL();
	setup_screen();	
	
 
	if(Mix_OpenAudio(audio_rate, audio_format, audio_channels, audio_buffers) != 0) {
		error();
	} 
	
	SDL_WM_SetCaption("Hax World", NULL); 

	menubg = load_image("backgrounds/background.png"); 

	if(menubg == NULL) {
		error();
	} else {
	}

	bool quit = false;
	
        apply_loadscreen();

	// update the screen
	if(SDL_Flip(screen) == -1) {
		return 1;
	}
	
	sound = Mix_LoadWAV("data/music/menu.wav");
	if(sound == NULL) {
		error();
	}
 
	channel = Mix_PlayChannel(-1, sound, 0);
	if(channel == -1) {
			error();
	}

	while(quit == false) {
			if(channel == NULL) {
				channel = Mix_PlayChannel(-1, sound, 0);		
			}
			// if user X'ed out of the window
			if(event.type == SDL_QUIT)
			{
				//quit
				quit = true;
				if(quit == true)
				{
					printf("\nUser has exited manually.\n");
					clean_up();
					return 0; 
				}
			}
		}
	clean_up();
	return 0; 
}
